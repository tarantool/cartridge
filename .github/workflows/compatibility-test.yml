name: Compatibility Test

on:
  push:
    paths-ignore:
      - "rst/**"
      - ".github/workflows/*-translation.yml"
  workflow_dispatch:

env:
  # Skip building frontend in tt rocks make
  CMAKE_DUMMY_WEBUI: true

jobs:
  compatibility:
    strategy:
      fail-fast: false
      matrix:
        tarantool: ["1.10"]
        cartridge: ["1.2.0", "2.3.0", "2.4.0", "2.5.1", "2.6.0"]
        downgrade: [null]
        include:
          - tarantool: "1.10"
            cartridge: "2.10.0"
            downgrade: true
          - tarantool: "1.10"
            cartridge: "2.11.0"
            downgrade: true
          - tarantool: "1.10"
            cartridge: "2.12.4"
            downgrade: true
          - tarantool: "1.10"
            cartridge: "2.13.0"
            downgrade: true
          - tarantool: "1.10"
            cartridge: "2.14.0"
            downgrade: true
          - tarantool: "2.11"
            cartridge: "2.14.0"
            downgrade: true
    runs-on: ubuntu-22.04
    env:
      CARTRIDGE_OLDER_PATH: cartridge-${{ matrix.cartridge }}
      CARTRIDGE_OLDER_VERSION: ${{ matrix.cartridge }}-1
      CARTRIDGE_DOWNGRADE: ${{ matrix.downgrade }}
    steps:
      - uses: actions/checkout@v4
      - uses: tarantool/setup-tarantool@v3
        with:
          tarantool-version: "${{ matrix.tarantool }}"

      - name: Setup tt
        run: |
          curl -L https://tarantool.io/release/2/installer.sh | sudo bash
          sudo apt install -y tt
          tt version

      # Setup older cartridge for compatibility.cartridge_upgrade_test
      - name: Cache ${{ env.CARTRIDGE_OLDER_PATH }}
        id: cache-older-cartridge
        uses: actions/cache@v4
        with:
          path: ${{ env.CARTRIDGE_OLDER_PATH }}
          key: ${{ env.CARTRIDGE_OLDER_PATH }}
      - name: Install ${{ env.CARTRIDGE_OLDER_PATH }}
        if: steps.cache-older-cartridge.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ env.CARTRIDGE_OLDER_PATH }}
          pushd ${{ env.CARTRIDGE_OLDER_PATH }}
          tt rocks install cartridge ${{ env.CARTRIDGE_OLDER_VERSION }}
          popd

      # Setup luatest
      - name: Cache rocks
        uses: actions/cache@v4
        id: cache-rocks
        with:
          path: .rocks/
          key: compat-rocks-${{ hashFiles('*.rockspec') }}-03
      - run: tt rocks install luatest 1.0.1
        if: steps.cache-rocks.outputs.cache-hit != 'true'

      - run: tt rocks make
      - run: .rocks/bin/luatest -v -p compatibility.*

      # Cleanup cached paths
      - run: tt rocks remove cartridge
