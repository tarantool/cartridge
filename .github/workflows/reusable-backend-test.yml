name: Reusable Backend Test

on:
  workflow_call:
    inputs:
      artifact_name:
        description: 'The name of the tarantool build artifact'
        default: ubuntu-focal
        required: false
        type: string

env:
  # Skip building frontend in `tarantoolctl rocks make`.
  CMAKE_DUMMY_WEBUI: true
  # Prerequisite for some etcd-related tests.
  ETCD_PATH: etcd-v2.3.8/etcd

jobs:
  run_tests:
    runs-on: ubuntu-20.04
    steps:
      - name: 'Clone the cartridge module'
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository_owner }}/cartridge

      # Setup tarantool
      - name: 'Download the tarantool build artifact'
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.artifact_name }}
      - name: 'Install tarantool'
        # TODO(ylobankov): Install package dependencies. Now we're lucky: all
        # dependencies are already there.
        run: sudo dpkg -i tarantool*.deb

      # Setup etcd
      - name: 'Install etcd'
        uses: ./.github/actions/setup-etcd
        with:
          etcd-version: v2.3.8
          install-prefix: etcd-v2.3.8

      # Setup luatest
      - name: 'Install luatest'
        run: tarantoolctl rocks install luatest 0.5.6

      # Setup pytest
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: 'Install pytest'
        run: |
          python -m venv ./pytest-venv && . ./pytest-venv/bin/activate
          pip install -r test/integration/requirements.txt

      # Setup cartridge
      - name: 'Install cartridge'
        run: tarantoolctl rocks make

      # Stop Mono server. This server starts and listen to 8084 port that is
      # used for tests.
      - name: 'Stop Mono server'
        run: sudo kill -9 $(sudo lsof -t -i tcp:8084) || true

      # Run tests
      - name: 'Run luatest'
        run: .rocks/bin/luatest -v -b
      - name: 'Run pytest'
        run: |
          source ./pytest-venv/bin/activate
          pytest -v
