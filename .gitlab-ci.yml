variables:
  ROCK_NAME: cartridge
  BUNDLE_VERSION: "1.10.4-8-g3f2b35b"
  BASE_BUILD_IMAGE: registry.gitlab.com/tarantool/cartridge

stages:
  - build
  - test
  - publish

build:
  stage: build
  tags:
    - shell
  only:
    changes:
      - Dockerfile
      - .gitlab-ci.yml
      - test/integration/requirements.txt
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - >
      docker build
      --label GIT_DESCRIBE=$(git describe --tags)
      --label GIT_COMMIT=$CI_COMMIT_SHA
      --build-arg BUNDLE_VERSION=${BUNDLE_VERSION}
      --build-arg DOWNLOAD_TOKEN=${DOWNLOAD_TOKEN}
      --target build
      -t ${BASE_BUILD_IMAGE}:${BUNDLE_VERSION}
      -f Dockerfile
      .
    - docker push ${BASE_BUILD_IMAGE}:${BUNDLE_VERSION}
  after_script:
    - docker logout registry.gitlab.com

test_enterprise_1.10.4:
  image: ${BASE_BUILD_IMAGE}:${BUNDLE_VERSION}
  stage: test
  dependencies: []
  tags:
    - docker
  before_script:
    - tarantoolctl rocks make
  script:
    - pytest -v
    - ./taptest.lua
    - luatest -v
    - luacheck cartridge-scm-1.rockspec
    - ./fetch-schema.sh
    - ./check-flow-graphql.sh
    - ./release.sh
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - doc/
      - release/
      - release-doc/
      - luacov.report.out

publish-scm-1:
  stage: publish
  tags:
    - docker
  image: centos:7
  only:
    - master
  script:
    - curl --fail -X PUT -F "rockspec=@${ROCK_NAME}-scm-1.rockspec"
      https://${ROCKS_USERNAME}:${ROCKS_PASSWORD}@rocks.tarantool.org


publish-release:
  stage: publish
  tags:
    - docker
  image: centos:7
  only:
    - tags
  script:
    - cd release/
    - curl --fail -X PUT -F "rockspec=@${ROCK_NAME}-${CI_COMMIT_TAG}-1.rockspec"
      https://${ROCKS_USERNAME}:${ROCKS_PASSWORD}@rocks.tarantool.org
    - curl --fail -X PUT -F "rockspec=@${ROCK_NAME}-${CI_COMMIT_TAG}-1.all.rock"
      https://${ROCKS_USERNAME}:${ROCKS_PASSWORD}@rocks.tarantool.org
