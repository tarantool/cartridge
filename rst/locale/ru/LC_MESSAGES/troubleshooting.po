
msgid "Troubleshooting"
msgstr "Руководство по разрешению проблем"

msgid ""
"First of all, see a similar `guide "
"<https://www.tarantool.io/en/doc/latest/book/admin/troubleshoot/>`_ in the "
"Tarantool manual. Below you can find other Cartridge-specific problems "
"considered."
msgstr ""
"Для начала обратитесь к аналогичному `руководству по разрешению проблем "
"<https://www.tarantool.io/en/doc/latest/book/admin/troubleshoot/>`_ в "
"документации Tarantool. Ниже рассматриваются проблемы, присущие Tarantool "
"Cartridge."

msgid "Contents"
msgstr "Содержание"

msgid "Problems with replica"
msgstr "Проблемы, связанные с репликами"

msgid "**Examples:**"
msgstr "**Примеры:**"

msgid ""
"``Missing .xlog file between LSN 5137088 {1: 240379, 2: 4750534, 5: 146175} "
"and 5137379 {1: 240379, 2: 4750825, 5: 146175} which means that master lost "
"one or more of their xlog files, please check it``"
msgstr ""
"``Missing .xlog file between LSN 5137088 {1: 240379, 2: 4750534, 5: 146175} "
"and 5137379 {1: 240379, 2: 4750825, 5: 146175} which means that master lost "
"one or more of their xlog files, please check it``"

msgid ""
"``Duplicate key exists in unique index \"primary\" in space \"T1\" with old "
"tuple``"
msgstr ""
"``Duplicate key exists in unique index \"primary\" in space \"T1\" with old "
"tuple``"

msgid "**Solution:**"
msgstr "**Решение:**"

msgid ""
"If you have some replication conflicts and issues that you don't know how to"
" deal with, try to rebootstrap the replica."
msgstr ""
"Если вы не знаете, как справиться с возникшими конфликтами и проблемами "
"репликации, попробуйте повторно настроить реплику."

msgid ""
"**(!)** Make sure that you have your data safe on the master before "
"rebootstrap."
msgstr ""
"**(!)** Перед повторной настройкой убедитесь, что ваши данные находятся в "
"безопасности на мастере."

msgid "Stop the instance"
msgstr "Остановите экземпляр"

msgid "Delete snapshots and xlogs"
msgstr "Удалите снимки и файлы в формате xlog"

msgid "Preserve cluster-wide config (``config`` dir)"
msgstr "Сохраните конфигурацию на уровне кластера (каталог ``config``)"

msgid "Restart the instance"
msgstr "Перезапустите экземпляр"

msgid "Editing clusterwide configuration in WebUI returns an error"
msgstr ""
"При редактировании конфигурации на уровне кластера в веб-интерфейсе "
"возникает ошибка"

msgid "**Examples**:"
msgstr "**Примеры**:"

msgid "``NetboxConnectError: \"localhost:3302\": Connection refused``;"
msgstr "``NetboxConnectError: \"localhost:3302\": Connection refused``;"

msgid ""
"``Prepare2pcError: Instance state is OperationError, can't apply config in "
"this state``."
msgstr ""
"``Prepare2pcError: Instance state is OperationError, can't apply config in "
"this state``."

msgid ""
"**The root problem**: all cluster instances are equal, and all of them store"
" a copy of clusterwide configuration, which must be the same. If an instance"
" degrades (can't accept new configuration) -- the quorum is lost. This "
"prevents further configuration modifications to avoid inconsistency."
msgstr ""
"**Главная проблема**: все экземпляры кластера равны, и все они хранят копию "
"конфигурации на уровне кластера, которая должна быть одинаковой. Если один "
"из экземпляров дает сбой (не может принять новую конфигурацию), то кворум "
"потерян. Чтобы избежать несогласованности, дальнейшие изменения конфигурации"
" не допускаются."

msgid ""
"But sometimes inconsistency is needed to repair the system, at least "
"partially and temporarily. It can be achieved by disabling degraded "
"instances."
msgstr ""
"Тем не менее, иногда несогласованность необходима для восстановления "
"системы, хотя бы частично и временно. Этого можно достичь, отключив "
"экземпляр, который дал сбой."

msgid "**Solution**:"
msgstr "**Решение**:"

msgid "Connect to the console of the alive instance."
msgstr "Подключитесь к консоли рабочего экземпляра."

msgid ""
"tarantoolctl connect unix/:/var/run/tarantool/<app-name>.<instance-"
"name>.control"
msgstr ""
"tarantoolctl connect unix/:/var/run/tarantool/<app-name>.<instance-"
"name>.control"

msgid "Inspect what's going on."
msgstr "Проверьте, что происходит."

msgid ""
"cartridge = require('cartridge')\n"
"report = {}\n"
"for _, srv in pairs(cartridge.admin_get_servers()) do\n"
"    report[srv.uuid] = {uri = srv.uri, status = srv.status, message = srv.message}\n"
"end\n"
"return report"
msgstr ""
"cartridge = require('cartridge')\n"
"report = {}\n"
"for _, srv in pairs(cartridge.admin_get_servers()) do\n"
"    report[srv.uuid] = {uri = srv.uri, status = srv.status, message = srv.message}\n"
"end\n"
"return report"

msgid ""
"If you're ready to proceed, run the following snippet. It'll disable all "
"instances which are not healthy. After that, you can use the WebUI as usual."
msgstr ""
"Если вы готовы продолжить, запустите следующий фрагмент кода. Он отключит "
"все нерабочие экземпляры. После этого вы сможете использовать веб-интерфейс "
"как обычно."

msgid ""
"disable_list = {}\n"
"for uuid, srv in pairs(report) do\n"
"    if srv.status ~= 'healthy' then\n"
"       table.insert(disable_list, uuid)\n"
"    end\n"
"end\n"
"return cartridge.admin_disable_servers(disable_list)"
msgstr ""
"disable_list = {}\n"
"for uuid, srv in pairs(report) do\n"
"    if srv.status ~= 'healthy' then\n"
"       table.insert(disable_list, uuid)\n"
"    end\n"
"end\n"
"return cartridge.admin_disable_servers(disable_list)"

msgid ""
"When it's necessary to bring disabled instances back, re-enable them in a "
"similar manner:"
msgstr "Если необходимо вернуть отключенные экземпляры, включите их:"

msgid ""
"cartridge = require('cartridge')\n"
"enable_list = {}\n"
"for _, srv in pairs(cartridge.admin_get_servers()) do\n"
"    if srv.disabled then\n"
"       table.insert(enable_list, srv.uuid)\n"
"    end\n"
"end\n"
"return cartridge.admin_enable_servers(enable_list)"
msgstr ""
"cartridge = require('cartridge')\n"
"enable_list = {}\n"
"for _, srv in pairs(cartridge.admin_get_servers()) do\n"
"    if srv.disabled then\n"
"       table.insert(enable_list, srv.uuid)\n"
"    end\n"
"end\n"
"return cartridge.admin_enable_servers(enable_list)"

msgid "An instance is stuck in the ConnectingFullmesh state upon restart"
msgstr "Экземпляр зависает в состоянии ConnectingFullmesh после перезапуска"

msgid "**Example**:"
msgstr "**Пример**:"

msgid ""
"**The root problem**: after restart, the instance tries to connect to all "
"its replicas and remains in the ``ConnectingFullmesh`` state until it "
"succeeds. If it can't (due to replica URI unavailability or for any other "
"reason) -- it's stuck forever."
msgstr ""
"**Главная проблема**: после перезапуска экземпляр пытается подключиться ко "
"всем своим репликам и остается в состоянии ``ConnectingFullmesh`` до тех "
"пор, пока ему это не удастся. Если он не может (из-за недоступности URI "
"реплики или по любой другой причине), то он завис навсегда."

msgid ""
"Set the `replication_connect_quorum "
"<https://www.tarantool.io/en/doc/latest/reference/configuration/#cfg-"
"replication-replication-connect-quorum>`_ option to zero. It may be "
"accomplished in two ways:"
msgstr ""
"Для параметра `replication_connect_quorum "
"<https://www.tarantool.io/en/doc/latest/reference/configuration/#cfg-"
"replication-replication-connect-quorum>`_ задайте значение \"ноль\". Это "
"может сделать двумя способами:"

msgid ""
"By restarting it with the corresponding option set (in environment variables"
" or in the :ref:`instance configuration file <cartridge-run-systemctl-"
"config>`);"
msgstr ""
"Перезапустить экземпляр, задав соответствующий параметр (в переменных "
"окружения или в :ref:`конфигурационном файле экземпляра <cartridge-run-"
"systemctl-config>`);"

msgid "Or without restart -- by running the following one-liner:"
msgstr "Без перезапуска выполнить:"

msgid ""
"echo \"box.cfg({replication_connect_quorum = 0})\" | tarantoolctl connect \\\n"
"unix/:/var/run/tarantool/<app-name>.<instance-name>.control"
msgstr ""
"echo \"box.cfg({replication_connect_quorum = 0})\" | tarantoolctl connect \\\n"
"unix/:/var/run/tarantool/<app-name>.<instance-name>.control"

msgid "I want to run an instance with a new advertise_uri"
msgstr "Я хочу запустить экземпляр с новым advertise_uri"

msgid ""
"**The root problem**: ``advertise_uri`` parameter is persisted in the "
"clusterwide configuration. Even if it changes upon restart, the rest of the "
"cluster keeps using the old one, and the cluster may behave in an odd way."
msgstr ""
"**Главная проблема**: Параметр ``advertise_uri`` сохраняется в конфигурации "
"на уровне кластера. Даже если изменить его при перезапуске, остальная часть "
"кластера продолжит использовать старое значение, и кластер может вести себя "
"непредсказуемо."

msgid "The clusterwide configuration should be updated."
msgstr "Нужно обновить конфигурацию на уровне кластера."

msgid ""
"Make sure all instances are running and not stuck in the ConnectingFullmesh "
"state (see :ref:`above <troubleshooting-stuck-connecting-fullmesh>`)."
msgstr ""
"Убедитесь, что все экземпляры запущены и не зависли в состоянии "
"ConnectingFullmesh (см. :ref:`проблему выше <troubleshooting-stuck-"
"connecting-fullmesh>`)."

msgid ""
"Make sure all instances have discovered each other (i.e. they look healthy "
"in the WebUI)."
msgstr ""
"Убедитесь, что все экземпляры нашли друг друга (т.е. в веб-интерфейсе "
"выглядят рабочими)."

msgid ""
"Run the following snippet in the Tarantool console. It'll prepare a patch "
"for the clusterwide configuration."
msgstr ""
"Выполните следующий фрагмент кода в консоли Tarantool. Он подготовит патч "
"для конфигурации на уровне кластера."

msgid ""
"cartridge = require('cartridge')\n"
"members = require('membership').members()\n"
"\n"
"edit_list = {}\n"
"changelog = {}\n"
"for _, srv in pairs(cartridge.admin_get_servers()) do\n"
"    for _, m in pairs(members) do\n"
"        if m.status == 'alive'\n"
"        and m.payload.uuid == srv.uuid\n"
"        and m.uri ~= srv.uri\n"
"        then\n"
"            table.insert(edit_list, {uuid = srv.uuid, uri = m.uri})\n"
"            table.insert(changelog, string.format('%s -> %s (%s)', srv.uri, m.uri, m.payload.alias))\n"
"            break\n"
"        end\n"
"    end\n"
"end\n"
"return changelog"
msgstr ""
"cartridge = require('cartridge')\n"
"members = require('membership').members()\n"
"\n"
"edit_list = {}\n"
"changelog = {}\n"
"for _, srv in pairs(cartridge.admin_get_servers()) do\n"
"    for _, m in pairs(members) do\n"
"        if m.status == 'alive'\n"
"        and m.payload.uuid == srv.uuid\n"
"        and m.uri ~= srv.uri\n"
"        then\n"
"            table.insert(edit_list, {uuid = srv.uuid, uri = m.uri})\n"
"            table.insert(changelog, string.format('%s -> %s (%s)', srv.uri, m.uri, m.payload.alias))\n"
"            break\n"
"        end\n"
"    end\n"
"end\n"
"return changelog"

msgid "As a result you'll see a brief summary like the following one:"
msgstr "В результате вы увидите сводную таблицу такого типа:"

msgid ""
"localhost:3301> return changelog\n"
"---\n"
"- - localhost:13301 -> localhost:3301 (srv-1)\n"
"  - localhost:13302 -> localhost:3302 (srv-2)\n"
"  - localhost:13303 -> localhost:3303 (srv-3)\n"
"  - localhost:13304 -> localhost:3304 (srv-4)\n"
"  - localhost:13305 -> localhost:3305 (srv-5)\n"
"..."
msgstr ""
"localhost:3301> return changelog\n"
"---\n"
"- - localhost:13301 -> localhost:3301 (srv-1)\n"
"  - localhost:13302 -> localhost:3302 (srv-2)\n"
"  - localhost:13303 -> localhost:3303 (srv-3)\n"
"  - localhost:13304 -> localhost:3304 (srv-4)\n"
"  - localhost:13305 -> localhost:3305 (srv-5)\n"
"..."

msgid "Finally, apply the patch:"
msgstr "Наконец, примените патч:"

msgid "cartridge.admin_edit_topology({servers = edit_list})"
msgstr "cartridge.admin_edit_topology({servers = edit_list})"

msgid ""
"The cluster is doomed, I've edited the config manually. How do I reload it?"
msgstr ""
"Кластер уже не спасти, я отредактировал конфигурацию вручную. Как мне ее "
"перезагрузить?"

msgid ""
"Please be aware that it's quite risky and you know what you're doing. "
"There's some useful information about :ref:`clusterwide configuration "
"<cartridge-config>` anatomy and \"normal\" management API."
msgstr ""
"Обратите внимание, что это довольно рискованно (убедитесь, что вы знаете, "
"что делаете). Вам пригодится информация о структуре :ref:`конфигурации на "
"уровне кластера <cartridge-config>` и \"нормальном\" API управления."

msgid ""
"But if you're still determined to reload the configuration manually, you can"
" do (in the Tarantool console):"
msgstr ""
"Если вы все же решили перезагрузить конфигурацию вручную, это можно сделать "
"в консоли Tarantool:"

msgid ""
"function reload_clusterwide_config()\n"
"    local changelog = {}\n"
"\n"
"    local ClusterwideConfig = require('cartridge.clusterwide-config')\n"
"    local confapplier = require('cartridge.confapplier')\n"
"\n"
"    -- load config from filesystem\n"
"    table.insert(changelog, 'Loading new config...')\n"
"\n"
"    local cfg, err = ClusterwideConfig.load('./config')\n"
"    if err ~= nil then\n"
"        return changelog, string.format('Failed to load new config: %s', err)\n"
"    end\n"
"\n"
"    -- check instance state\n"
"    table.insert(changelog, 'Checking instance config state...')\n"
"\n"
"    local roles_configured_state = 'RolesConfigured'\n"
"    local connecting_fullmesh_state = 'ConnectingFullmesh'\n"
"\n"
"    local state = confapplier.wish_state(roles_configured_state, 10)\n"
"\n"
"    if state == connecting_fullmesh_state then\n"
"        return changelog, string.format(\n"
"            'Failed to reach %s config state. Stuck in %s. ' ..\n"
"                'Call \"box.cfg({replication_connect_quorum = 0})\" in instance console and try again',\n"
"            roles_configured_state, state\n"
"        )\n"
"    end\n"
"\n"
"    if state ~= roles_configured_state then\n"
"        return changelog, string.format(\n"
"            'Failed to reach %s config state. Stuck in %s',\n"
"            roles_configured_state, state\n"
"        )\n"
"    end\n"
"\n"
"    -- apply config changes\n"
"    table.insert(changelog, 'Applying config changes...')\n"
"\n"
"    cfg:lock()\n"
"    local ok, err = confapplier.apply_config(cfg)\n"
"    if err ~= nil then\n"
"        return changelog, string.format('Failed to apply new config: %s', err)\n"
"    end\n"
"\n"
"    table.insert(changelog, 'Cluster-wide configuration was successfully updated')\n"
"\n"
"    return changelog\n"
"end\n"
"\n"
"reload_clusterwide_config()"
msgstr ""
"function reload_clusterwide_config()\n"
"    local changelog = {}\n"
"\n"
"    local ClusterwideConfig = require('cartridge.clusterwide-config')\n"
"    local confapplier = require('cartridge.confapplier')\n"
"\n"
"    -- загрузите конфигурацию из файловой системы\n"
"    table.insert(changelog, 'Loading new config...')\n"
"\n"
"    local cfg, err = ClusterwideConfig.load('./config')\n"
"    if err ~= nil then\n"
"        return changelog, string.format('Failed to load new config: %s', err)\n"
"    end\n"
"\n"
"    -- проверьте состояние экземпляра\n"
"    table.insert(changelog, 'Checking instance config state...')\n"
"\n"
"    local roles_configured_state = 'RolesConfigured'\n"
"    local connecting_fullmesh_state = 'ConnectingFullmesh'\n"
"\n"
"    local state = confapplier.wish_state(roles_configured_state, 10)\n"
"\n"
"    if state == connecting_fullmesh_state then\n"
"        return changelog, string.format(\n"
"            'Failed to reach %s config state. Stuck in %s. ' ..\n"
"                'Call \"box.cfg({replication_connect_quorum = 0})\" in instance console and try again',\n"
"            roles_configured_state, state\n"
"        )\n"
"    end\n"
"\n"
"    if state ~= roles_configured_state then\n"
"        return changelog, string.format(\n"
"            'Failed to reach %s config state. Stuck in %s',\n"
"            roles_configured_state, state\n"
"        )\n"
"    end\n"
"\n"
"    -- примените изменения конфигурации\n"
"    table.insert(changelog, 'Applying config changes...')\n"
"\n"
"    cfg:lock()\n"
"    local ok, err = confapplier.apply_config(cfg)\n"
"    if err ~= nil then\n"
"        return changelog, string.format('Failed to apply new config: %s', err)\n"
"    end\n"
"\n"
"    table.insert(changelog, 'Cluster-wide configuration was successfully updated')\n"
"\n"
"    return changelog\n"
"end\n"
"\n"
"reload_clusterwide_config()"

msgid ""
"This snippet reloads the configuration on a single instance. All other "
"instances continue operating as before."
msgstr ""
"Этот фрагмент кода перезагрузит конфигурацию на отдельном экземпляре. Все "
"остальные экземпляры продолжат работать в прежнем режиме."

msgid ""
"If further configuration modifications are made with a two-phase commit "
"(e.g. via the WebUI or with the Lua API), the active configuration of an "
"active instance will be spread across the cluster."
msgstr ""
"Если в дальнейшем изменения в конфигурацию будут внесены по двухфазной "
"фиксации (например, через веб-интерфейс или с помощью Lua API), действующая "
"конфигурация активного экземпляра будет распределена по кластеру."

msgid "Repairing cluster using Cartridge CLI repair command"
msgstr "Восстановление кластера с помощью команды repair в Cartridge CLI"

msgid ""
"Cartridge CLI has `repair <https://github.com/tarantool/cartridge-"
"cli#repairing-a-cluster>`_ command since version `2.3.0 "
"<https://github.com/tarantool/cartridge-cli/releases/tag/2.3.0>`_."
msgstr ""
"Начиная с версии `2.3.0 <https://github.com/tarantool/cartridge-"
"cli/releases/tag/2.3.0>`_, в интерфейсе командной строки Cartridge можно "
"использовать команду `repair <https://github.com/tarantool/cartridge-"
"cli#repairing-a-cluster>`_."

msgid ""
"It can be used to get current topology, remove instance from cluster, change"
" replicaset leader or change instance advertise URI."
msgstr ""
"Эту команду можно использовать, чтобы получить текущую топологию, удалить "
"экземпляра из кластера, изменить лидера в наборе реплик или изменить URI, "
"который передает экземпляр."

msgid ""
"``cartridge repair`` patches the cluster-wide configuration files of "
"application instances placed ON THE LOCAL MACHINE. It means that running "
"``cartridge repair`` on all machines is user responsibility."
msgstr ""
"``cartridge repair`` исправляет кластерные конфигурационные файлы "
"экземпляров приложений, размещенных НА ЛОКАЛЬНОЙ МАШИНЕ. Это означает, что в"
" обязанности пользователя входит запуск ``cartridge repair`` на всех "
"машинах."

msgid ""
"It's not enough to apply new configuration: the configuration should be "
"reloaded by the instance. If your application uses ``cartridge >= 2.0.0``, "
"you can simply use ``--reload`` flag to reload configuration. Otherwise, you"
" need to restart instances or reload configuration manually."
msgstr ""
"Недостаточно применить новую конфигурацию — экземпляр должен перезагрузить "
"конфигурацию. Если у вашего приложения ``cartridge >= 2.0.0``, вы можете "
"просто использовать флаг ``--reload``, чтобы загрузить конфигурацию. В "
"противном случае нужно перезапустить экземпляры или перезагрузить "
"конфигурацию вручную."

msgid "Changing instance advertise URI"
msgstr "Изменение URI, который передает экземпляр"

msgid "To change instance advertise URI you have to perform these actions:"
msgstr ""
"Чтобы изменить advertise_URI экземпляра, нужно выполнить следующие действия:"

msgid ""
"Start instance with a new advertise URI. The easiest way is to change "
"``advertise_uri`` value in the :ref:`instance configuration file <cartridge-"
"run-systemctl-config>`)."
msgstr ""
"Запустите экземпляр с новым advertise_URI. Самый простой способ — изменить "
"значение ``advertise_uri`` в :ref:`конфигурационном файле экземпляра "
"<cartridge-run-systemctl-config>`)."

msgid ""
"Make sure instances are running and not stuck in the ConnectingFullmesh "
"state (see :ref:`above <troubleshooting-stuck-connecting-fullmesh>`)."
msgstr ""
"Убедитесь, что экземпляры запущены и не зависли в состоянии "
"ConnectingFullmesh (см. :ref:`проблему выше <troubleshooting-stuck-"
"connecting-fullmesh>`)."

msgid "Get instance UUID:"
msgstr "Получите UUID экземпляра:"

msgid "open ``server details`` tab in WebUI;"
msgstr "откройте вкладку ``server details`` в веб-интерфейсе;"

msgid ""
"call ``cartridge repair list-topology --name <app-name>`` and find desired "
"instance UUID:"
msgstr ""
"вызовите ``cartridge repair list-topology --name <app-name>`` и найдите "
"нужный экземпляр:"

msgid "get instance ``box.info().uuid``:"
msgstr "получите ``box.info().uuid`` экземпляра:"

msgid ""
"echo \"return box.info().uuid\" | tarantoolctl connect \\\n"
"unix/:/var/run/tarantool/<app-name>.<instance-name>.control"
msgstr ""
"echo \"return box.info().uuid\" | tarantoolctl connect \\\n"
"unix/:/var/run/tarantool/<app-name>.<instance-name>.control"

msgid ""
"Now we need to update instance advertise URI in all instances cluster-wide "
"configuration files on each machine. Run ``cartridge repair set-advertise-"
"uri`` with ``--dry-run`` flag on each machine to check cluster-wide config "
"changes computed  by ``cartridge-cli``:"
msgstr ""
"Теперь нужно обновить URI, который передает этот экземпляр, в "
"конфигурационных файлах на уровне кластера на каждой машине. Запустите "
"``cartridge repair set-advertise-uri`` с флагом ``--dry-run`` на каждой "
"машине, чтобы проверить изменения конфигурации на уровне кластера, "
"вычисленные ``cartridge-cli``:"

msgid ""
"cartridge repair set-advertise-uri \\\n"
"  --name myapp \\\n"
"  --dry-run \\\n"
"  <instance-uuid> <new-advertise-uri>"
msgstr ""
"cartridge repair set-advertise-uri \\\n"
"  --name myapp \\\n"
"  --dry-run \\\n"
"  <instance-uuid> <new-advertise-uri>"

msgid ""
"Run ``cartridge repair set-advertise-uri`` without ``--dry-run`` flag on "
"each machine to apply config changes computed by ``cartridge-cli``. If your "
"application uses ``cartridge >= 2.0.0``, you can specify ``--reload`` flag "
"to load new cluter-wide configuration on instances. Otherwise, you need to "
"restart instances or reload configuration manually."
msgstr ""
"Запустите ``cartridge repair set-advertise-uri`` без флага ``--dry-run`` на "
"каждой машине, чтобы применить изменения конфигурации, вычисленные "
"``cartridge-cli``. Если у вашего приложения ``cartridge >= 2.0.0``, вы "
"можете указать флаг ``--reload``, чтобы загрузить новую кластерную "
"конфигурацию на экземпляры. В противном случае нужно перезапустить "
"экземпляры или перезагрузить конфигурацию вручную."

msgid ""
"cartridge repair set-advertise-uri \\\n"
"  --name myapp \\\n"
"  --verbose \\\n"
"  --reload \\\n"
"  <instance-uuid> <new-advertise-uri>"
msgstr ""
"cartridge repair set-advertise-uri \\\n"
"  --name myapp \\\n"
"  --verbose \\\n"
"  --reload \\\n"
"  <instance-uuid> <new-advertise-uri>"

msgid "Changing replicaset leader"
msgstr "Изменение лидера в наборе реплик"

msgid "You can change replicaset leader using ``cartridge repair`` command."
msgstr ""
"Поменять лидера в наборе реплик можно с помощью команды ``cartridge "
"repair``."

msgid ""
"Get replicaset UUID and new leader UUID (in WebUI or by calling ``cartridge "
"repair list-topology --name <app-name>``)."
msgstr ""
"Получите UUID набора реплик и UUID нового лидера (в веб-интерфейсе или с "
"помощью команды ``cartridge repair list-topology --name <app-name>``)."

msgid ""
"Now we need to update cluster-wide config for all instances on each machine."
" Run ``cartridge repair set-leader`` with ``--dry-run`` flag on each machine"
" to check cluster-wide config changes computed by `` cartridge-cli``:"
msgstr ""
"Теперь нужно обновить конфигурационные файлы на уровне кластера на каждой "
"машине. Запустите ``cartridge repair set-leader`` с флагом ``--dry-run`` на "
"каждой машине, чтобы проверить изменения конфигурации на уровне кластера, "
"вычисленные ``cartridge-cli``:"

msgid ""
"cartridge repair set-leader \\\n"
"  --name myapp \\\n"
"  --dry-run \\\n"
"  <replicaset-uuid> <instance-uuid>"
msgstr ""
"cartridge repair set-leader \\\n"
"  --name myapp \\\n"
"  --dry-run \\\n"
"  <replicaset-uuid> <instance-uuid>"

msgid ""
"cartridge repair set-leader \\\n"
"  --name myapp \\\n"
"  --verbose \\\n"
"  --reload \\\n"
"  <replicaset-uuid> <instance-uuid>"
msgstr ""
"cartridge repair set-leader \\\n"
"  --name myapp \\\n"
"  --verbose \\\n"
"  --reload \\\n"
"  <replicaset-uuid> <instance-uuid>"

msgid "Removing instance from the cluster"
msgstr "Удаление экземпляра из кластера"

msgid ""
"You can remove instance from cluster using ``cartridge repair`` command."
msgstr ""
"Удалить экземпляр из кластера можно с помощью команды ``cartridge repair``."

msgid ""
"Now we need to update cluster-wide config for all instances on each machine."
" Run ``cartridge repair remove-instance`` with ``--dry-run`` flag on each "
"machine to check cluster-wide config changes computed by ``cartridge-cli``:"
msgstr ""
"Теперь нужно обновить конфигурационные файлы на уровне кластера на каждой "
"машине. Запустите ``cartridge repair remove-instance`` с флагом ``--dry-"
"run`` на каждой машине, чтобы проверить изменения конфигурации на уровне "
"кластера, вычисленные ``cartridge-cli``:"

msgid ""
"cartridge repair remove-instance \\\n"
"  --name myapp \\\n"
"  --dry-run \\\n"
"  <replicaset-uuid>"
msgstr ""
"cartridge repair remove-instance \\\n"
"  --name myapp \\\n"
"  --dry-run \\\n"
"  <replicaset-uuid>"

msgid ""
"Run ``cartridge repair remove-instance`` without ``--dry-run`` flag on each "
"machine to apply config changes computed by ``cartridge-cli``. If your "
"application uses ``cartridge >= 2.0.0``, you can specify ``--reload`` flag "
"to load new cluter-wide configuration on instances. Otherwise, you need to "
"restart instances or reload configuration manually."
msgstr ""
"Запустите ``cartridge repair remove-instance`` без флага ``--dry-run`` на "
"каждой машине, чтобы применить изменения конфигурации, вычисленные "
"``cartridge-cli``. Если у вашего приложения ``cartridge >= 2.0.0``, вы "
"можете указать флаг ``--reload``, чтобы загрузить новую кластерную "
"конфигурацию на экземпляры. В противном случае нужно перезапустить "
"экземпляры или перезагрузить конфигурацию вручную."
